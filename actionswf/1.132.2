diff '--exclude=.git' -ura --new-file ./actionswf-1-132/arh/pub actionswfnew/arh/pub
--- ./actionswf-1-132/arh/pub	2025-04-13 18:08:58.000000000 +0300
+++ actionswfnew/arh/pub	2025-04-21 08:48:46.965194433 +0300
@@ -10,7 +10,7 @@
 ~/test/rel && \
 ~/test/pub rpm rel && \
 ~/test/uponrpm && \
-~/test/up && \
+~/test/upgen actionswf.zip && \
 ~/test/pub uponrpm && \
 ~/test/pub2 && \
 ~/test/publp2 && \
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/clean actionswfnew/clean
--- ./actionswf-1-132/clean	2025-04-13 18:08:58.000000000 +0300
+++ actionswfnew/clean	2025-04-21 08:48:46.985194433 +0300
@@ -1,2 +1,2 @@
 
-make clean && git status
+cd example && make clean && cd .. && make clean && git status
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/.github/workflows/upgenactionswf.yml actionswfnew/.github/workflows/upgenactionswf.yml
--- ./actionswf-1-132/.github/workflows/upgenactionswf.yml	1970-01-01 02:00:00.000000000 +0200
+++ actionswfnew/.github/workflows/upgenactionswf.yml	2025-04-21 08:48:46.905194432 +0300
@@ -0,0 +1,25 @@
+
+on:
+ workflow_dispatch:
+
+jobs:
+ ubuildgen:
+  runs-on: ubuntu-18.04 #latest is ok but it must be downloaded first
+  steps:
+   - name: Run a multi-line script
+     run: |
+      if [ -n "${{ env.init }}" ]; then
+       exit 1
+      fi
+      #get up_url
+      wget https://github.com/colin-i/test/releases/download/1.5/${{ env.proj }} -O 1.txt
+      echo "up_url=`cat 1.txt`" >> $GITHUB_ENV
+   - name: Upload Release Asset
+     uses: actions/upload-release-asset@v1
+     env:
+      GITHUB_TOKEN: ${{ secrets.PAT }}
+     with:
+      upload_url: ${{ env.up_url }}
+      asset_path: ./${{ env.proj }}.zip
+      asset_name: ${{ env.proj }}.windows.zip
+      asset_content_type: application/zip
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/.github/workflows/up.yml actionswfnew/.github/workflows/up.yml
--- ./actionswf-1-132/.github/workflows/up.yml	2025-04-13 18:08:58.000000000 +0300
+++ actionswfnew/.github/workflows/up.yml	1970-01-01 02:00:00.000000000 +0200
@@ -1,25 +0,0 @@
-
-on:
- workflow_dispatch:
-
-jobs:
- ubuild:
-  runs-on: ubuntu-18.04 #latest is ok but it must be downloaded first
-  steps:
-   - name: Run a multi-line script
-     run: |
-      if [ -n "${{ env.init }}" ]; then
-       exit 1
-      fi
-      #get up_url
-      wget https://github.com/colin-i/test/releases/download/1.5/${{ env.proj }} -O 1.txt
-      echo "up_url=`cat 1.txt`" >> $GITHUB_ENV
-   - name: Upload Release Asset
-     uses: actions/upload-release-asset@v1
-     env:
-      GITHUB_TOKEN: ${{ secrets.PAT }}
-     with:
-      upload_url: ${{ env.up_url }}
-      asset_path: ./${{ env.proj }}.zip
-      asset_name: ${{ env.proj }}.windows.zip
-      asset_content_type: application/zip
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/Makefile actionswfnew/Makefile
--- ./actionswf-1-132/Makefile	2025-04-13 18:08:58.000000000 +0300
+++ actionswfnew/Makefile	2025-04-21 08:48:46.945194432 +0300
@@ -7,13 +7,18 @@
 conv_64=0
 endif
 
-SUBDIRS := src example oad
+SUBDIRS := src oad
+
+ifndef prefix
+prefix=/usr
+endif
 
 $(TOPTARGETS): $(SUBDIRS)
 $(SUBDIRS):
 	$(MAKE) -C $@ conv_64=${conv_64} $(MAKECMDGOALS)
 
 test:
+	$(MAKE) -C example conv_64=${conv_64}
 	RUN__SHELL=$(SHELL) . ./shl && cd tests && conv_64=${conv_64} RUN__SHELL="$${RUN__SHELL}" $${RUN__SHELL} ./as && conv_64=${conv_64} $${RUN__SHELL} ./c 1 && \
 	cd ffdec && conv_64=${conv_64} RUN__SHELL="$${RUN__SHELL}" $${RUN__SHELL} ./as && \
 	cd ../data && conv_64=${conv_64} RUN__SHELL="$${RUN__SHELL}" $${RUN__SHELL} ./test x && echo tests ok
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/mrd actionswfnew/mrd
--- ./actionswf-1-132/mrd	1970-01-01 02:00:00.000000000 +0200
+++ actionswfnew/mrd	2025-04-21 08:48:47.825194451 +0300
@@ -0,0 +1 @@
+cd src && ./mrd && cd ../oad && ./md
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/oad/branch.oc actionswfnew/oad/branch.oc
--- ./actionswf-1-132/oad/branch.oc	2025-04-13 18:08:58.000000000 +0300
+++ actionswfnew/oad/branch.oc	2025-04-21 08:48:47.895194453 +0300
@@ -5,6 +5,7 @@
 include "common.h" "common.oh"
 
 importx "malloc" malloc
+importx "free" free
 
 import "global_blog" global_blog
 
@@ -202,8 +203,6 @@
 
 import "tree_entrylive" tree_entrylive
 
-importx "free" free
-
 function branch_free(valueu br,valueu logstart,dataxu indents)
 	if logstart!=(NULL)
 		call branch_log(br,logstart)
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/oad/cflags actionswfnew/oad/cflags
--- ./actionswf-1-132/oad/cflags	1970-01-01 02:00:00.000000000 +0200
+++ actionswfnew/oad/cflags	2025-04-21 08:48:47.905194453 +0300
@@ -0,0 +1,2 @@
+
+EXTRA_CFLAGS=-Wno-int-conversion -Wno-incompatible-pointer-types
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/oad/frame.oc actionswfnew/oad/frame.oc
--- ./actionswf-1-132/oad/frame.oc	2025-04-13 18:08:58.000000000 +0300
+++ actionswfnew/oad/frame.oc	2025-04-21 08:48:47.955194454 +0300
@@ -131,11 +131,21 @@
 import "print_hex_start" print_hex_start
 import "print_hex" print_hex
 import "print_lhex" print_lhex
+import "prints" prints
 import "indent" indent
 
 importx "printf" printf
 importx "putchar" putchar
 
+function frame_print_top(charx ainit,datax log_index)
+	if ainit=(xlog_ainit_false)
+		call print("frame %u",log_index)
+	else
+		call prints("init")
+	end
+	call print_indent()
+end
+
 function preframe_free(sv pf,charx ainit,datax log_index,valueu logstart)
 	charx log#1
 	#valuexu stroff#1
@@ -247,7 +257,6 @@
 end
 
 import "print_text" print_text
-import "prints" prints
 
 function frame_print_action(valueu a,valueu b,charx c,charx d)
 	if a!=b
@@ -347,15 +356,6 @@
 	call free(f)
 end
 
-function frame_print_top(charx ainit,datax log_index)
-	if ainit=(xlog_ainit_false)
-		call print("frame %u",log_index)
-	else
-		call prints("init")
-	end
-	call print_indent()
-end
-
 function nframe_init(sv pf,valueu total)
 	set pf# preframe_init()
 	if pf#!=(NULL)
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/oad/log.oc actionswfnew/oad/log.oc
--- ./actionswf-1-132/oad/log.oc	2025-04-13 18:08:58.000000000 +0300
+++ actionswfnew/oad/log.oc	2025-04-21 08:48:48.005194455 +0300
@@ -15,21 +15,6 @@
 	return global.error
 end
 
-function tree_frame_init(valueu pf)
-	set pf#:preframe.log_mem (NULL)
-	set pf#:preframe.log_size 0
-	set pf#:preframe.log_allsize 0
-	set pf#:preframe.log_indents 0
-end
-importx "free" free
-import "print_text" print_text
-function tree_frame_free(valueu pf)
-	if pf#:preframe.log_mem!=(NULL)
-		call tree_entry_ex(pf,(output_nl))  #for memnl, if for prints will be '\0'
-		call print_text(pf#:preframe.log_mem,pf#:preframe.log_size)
-		call free(pf#:preframe.log_mem)
-	end
-end
 const tree_pad=pad_default
 const tree_pad_=(tree_pad-1)
 const _tree_pad_=~tree_pad_
@@ -49,7 +34,6 @@
 	end
 	return (EXIT_SUCCESS)
 end
-
 function tree_entry_ex(valueu pf,charx type)
 	charx ok#1;set ok tree_resize(pf,1)
 	if ok=(EXIT_SUCCESS)
@@ -60,6 +44,22 @@
 	end
 end
 
+function tree_frame_init(valueu pf)
+	set pf#:preframe.log_mem (NULL)
+	set pf#:preframe.log_size 0
+	set pf#:preframe.log_allsize 0
+	set pf#:preframe.log_indents 0
+end
+importx "free" free
+import "print_text" print_text
+function tree_frame_free(valueu pf)
+	if pf#:preframe.log_mem!=(NULL)
+		call tree_entry_ex(pf,(output_nl))  #for memnl, if for prints will be '\0'
+		call print_text(pf#:preframe.log_mem,pf#:preframe.log_size)
+		call free(pf#:preframe.log_mem)
+	end
+end
+
 function tree_indents(valueu pf)
 	dataxu i#1;set i pf#:preframe.log_indents
 	while i!=0  #not at root, add indents
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/oad/main.oc actionswfnew/oad/main.oc
--- ./actionswf-1-132/oad/main.oc	2025-04-13 18:08:58.000000000 +0300
+++ actionswfnew/oad/main.oc	2025-04-21 08:48:48.055194456 +0300
@@ -1,14 +1,80 @@
 
 format elfobj64
 
+override include_sec 1
+include "common.h" "common.oh"
+
+#multithread unsafe
+char logpad=xlog_pad_default
+#
+
+#functions(except oadata_free,oadata_logpad) are returning 0(long) on success and != on failure (EXIT_FAILURE or another != (from extern calls))
+
+importx "puts" puts
+importx "printf" printf
+importx "free" free
+
+import "sprite_free" sprite_free
+
+import "print" print
+import "print_inline_done" print_inline_done
+
+functionx oadata_free(sv data,charx log)
+	if data!=(NULL)
+		sv sprites;set sprites data#:oadata.sprites
+		if sprites!=(NULL)
+			sv s;set s sprites
+			sv end;set end data#:oadata.sprites_size
+			add end s
+			if log=(TRUE)
+				call puts("sprites:")
+			end
+			while s!=end
+				if log!=(TRUE)
+					call sprite_free(s,(NULL))
+				else
+					call sprite_free(s,sprites)
+				end
+				incst s
+			end
+			call free(sprites)
+
+			sv functions;set functions data#:oadata.functions
+			if functions!=(NULL)
+				if log=(TRUE)
+					set s data#:oadata.functions_size
+					div s :
+					call print("functions: %u",s)
+				end
+				call free(functions)
+
+				sv marks;set marks data#:oadata.marks
+				if marks!=(NULL)
+					if log=(TRUE)
+						valueu sz#1;set sz data#:oadata.size
+						div sz \mark\
+						call printf("marks: %u",sz)
+						if sz>^\mark\
+							#log first and last
+							valueu tolog#1;set tolog marks
+							add tolog data#:oadata.size
+							sub tolog \mark\
+							call printf(": %d %u ... %u %d",marks#:mark.prev,marks#:mark.next,tolog#:mark.prev,tolog#:mark.next)
+						end
+						call print_inline_done()
+					end
+					call free(marks)
+				end
+			end
+		end
+		call free(data)
+	end
+end
+
 importx "strlen" strlen
 importx "malloc" malloc
-importx "free" free
 importx "memcpy" memcpy
 
-override include_sec 1
-include "common.h" "common.oh"
-
 import "fcontent" fcontent
 import "loop" loop
 import "inter" inter
@@ -19,12 +85,6 @@
 import "tree_init" tree_init
 import "tree_exit" tree_exit
 
-#multithread unsafe
-char logpad=xlog_pad_default
-#
-
-#functions(except oadata_logpad) are returning 0(long) on success and != on failure (EXIT_FAILURE or another != (from extern calls))
-
 functionx oadata_make(ss swf_fullpath,svu poadata,charx log)
 	set poadata# (NULL)
 	sd size;set size strlen(swf_fullpath)
@@ -136,66 +196,6 @@
 	return (EXIT_FAILURE)
 end
 
-importx "puts" puts
-importx "printf" printf
-
-import "sprite_free" sprite_free
-
-import "print" print
-import "print_inline_done" print_inline_done
-
-functionx oadata_free(sv data,charx log)
-	if data!=(NULL)
-		sv sprites;set sprites data#:oadata.sprites
-		if sprites!=(NULL)
-			sv s;set s sprites
-			sv end;set end data#:oadata.sprites_size
-			add end s
-			if log=(TRUE)
-				call puts("sprites:")
-			end
-			while s!=end
-				if log!=(TRUE)
-					call sprite_free(s,(NULL))
-				else
-					call sprite_free(s,sprites)
-				end
-				incst s
-			end
-			call free(sprites)
-
-			sv functions;set functions data#:oadata.functions
-			if functions!=(NULL)
-				if log=(TRUE)
-					set s data#:oadata.functions_size
-					div s :
-					call print("functions: %u",s)
-				end
-				call free(functions)
-
-				sv marks;set marks data#:oadata.marks
-				if marks!=(NULL)
-					if log=(TRUE)
-						valueu sz#1;set sz data#:oadata.size
-						div sz \mark\
-						call printf("marks: %u",sz)
-						if sz>^\mark\
-							#log first and last
-							valueu tolog#1;set tolog marks
-							add tolog data#:oadata.size
-							sub tolog \mark\
-							call printf(": %d %u ... %u %d",marks#:mark.prev,marks#:mark.next,tolog#:mark.prev,tolog#:mark.next)
-						end
-						call print_inline_done()
-					end
-					call free(marks)
-				end
-			end
-		end
-		call free(data)
-	end
-end
-
 functionx oadata_logpad_get()
 	return global.logpad
 end
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/oad/Makefile actionswfnew/oad/Makefile
--- ./actionswf-1-132/oad/Makefile	2025-04-13 18:08:58.000000000 +0300
+++ actionswfnew/oad/Makefile	2025-04-21 08:48:47.875194452 +0300
@@ -14,6 +14,12 @@
 ifndef compilerflags
 compilerflags=${linkerflags}
 endif
+ifndef EXTRA_CFLAGS
+include ./cflags
+endif
+ifndef prefix
+prefix=/usr
+endif
 
 ifeq (${conv_64},1) #to cross compile
 	ifneq ($(CC),arm-linux-gnueabihf-gcc)
@@ -60,7 +66,8 @@
 %.o: %.oc
 	${OCOMP} $< ${OFLAGS}
 	${OCONV} $<.x
-	$(CC) ${model} -c -w -fPIC ${compilerflags} $*.c
+	$(CC) ${model} -c -w -fPIC ${compilerflags} ${EXTRA_CFLAGS} $*.c
+#-Wno are a must at pkgbuild
 #-fPIC since launchpad bionic build
 #-Wimplicit-function-declaration is good but anyway when making .x, ocompiler is also checking for this error
 %.ohi: %.oh
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/oad/mds actionswfnew/oad/mds
--- ./actionswf-1-132/oad/mds	2025-04-13 18:08:58.000000000 +0300
+++ actionswfnew/oad/mds	2025-04-21 08:48:48.105194457 +0300
@@ -1,3 +1,3 @@
 
 #if [ -n "${1}" ]; then OCOMP="q ~/o/ocompiler-1/src/o"; if [ ${1} = 0 ]; then shift; OCOMP=${OCOMP} ./md $@; exit; fi; shift; fi
-OCONV=~/o/ocompiler-1/otoc/otoc OCOMP="q ~/o/ocompiler-1/src/o" ./md $@
+OCONV="qq ~/o/ocompiler-1/otoc/otoc" OCOMP="q ~/o/ocompiler-1/src/o" ./md $@
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/oad/save.oc actionswfnew/oad/save.oc
--- ./actionswf-1-132/oad/save.oc	2025-04-13 18:08:58.000000000 +0300
+++ actionswfnew/oad/save.oc	2025-04-21 08:48:48.155194458 +0300
@@ -200,6 +200,7 @@
 #read
 
 importx "fread" fread
+importx "malloc" malloc
 importx "free" free
 
 function lowread(valueu file,valueu buf,charx sz)
@@ -229,7 +230,79 @@
 	call lowread(file,pn,(DWORD))
 end
 
-importx "malloc" malloc
+function restore_strings_free(valueu constpool,svu strs,dataxu size)
+	if size!=0  #not always having strings
+		sv cursor;set cursor strs
+		valueu end#1;set end strs
+		add end size
+		while cursor!=end
+			call free(cursor#)
+			incst cursor
+		end
+		call free(strs)
+		call free(constpool)
+	end
+end
+function restore_branch_inners_free(valueu br)
+	sv cursor;set cursor br#:branch.innerbranches
+	valueu end#1;set end cursor
+	add end br#:branch.isize
+	while cursor!=end
+		call restore_branch_free(cursor#)
+		incst cursor
+	end
+end
+function restore_branch_cuts_free(valueu br)
+	valueu cursor#1;set cursor br#:branch.cuts
+	valueu end#1;set end cursor
+	add end br#:branch.size
+	while cursor!=end
+		call free(cursor#:branchcut.x)
+		add cursor \branchcut\
+	end
+	call free(br#:branch.cuts)
+end
+function restore_branch_free(valueu br)
+	call restore_branch_cuts_free(br)
+	call restore_branch_inners_free(br)
+	valueu sbr#1;set sbr br#:branch.subbranch
+	if sbr!=(NULL)
+		call restore_branch_free(sbr)
+	end
+	call free(br)
+end
+function restore_frame_free(valueu fr)
+	call restore_strings_free(fr#:preframe.restore_ustrings,fr#:preframe.ustrings,fr#:preframe.ussize)
+	call restore_strings_free(fr#:preframe.restore_dstrings,fr#:preframe.strings,fr#:preframe.ssize)
+	call restore_branch_free(fr#:preframe.abranch)
+end
+function restore_free(svu predata)
+	svu pss#1;set pss predata#:preoadata.presprites
+	valueu end#1;set end pss
+	add end predata#:preoadata.size
+	while pss!=end
+		valueu ps#1;set ps pss#
+		if ps#:presprite.apreframe!=(NULL)
+			call restore_frame_free(ps#:presprite.apreframe)
+		end
+		valueu fs#1;set fs ps#:presprite.preframes
+		sv f;set f fs
+		valueu fend#1;set fend f
+		add fend ps#:presprite.size
+		while f!=fend
+			if f#!=(NULL) #can be also showframe
+				call restore_frame_free(f#)
+			end
+			incst f
+		end
+		call free(fs)
+		call free(ps)
+		incst pss
+	end
+	call free(predata#:preoadata.presprites)
+	call free(predata)
+end
+
 importx "printf" printf
 
 import "re_alloc_add" re_alloc_add
@@ -464,79 +537,3 @@
 	end
 	return (NULL)
 end
-
-function restore_free(svu predata)
-	svu pss#1;set pss predata#:preoadata.presprites
-	valueu end#1;set end pss
-	add end predata#:preoadata.size
-	while pss!=end
-		valueu ps#1;set ps pss#
-		if ps#:presprite.apreframe!=(NULL)
-			call restore_frame_free(ps#:presprite.apreframe)
-		end
-		valueu fs#1;set fs ps#:presprite.preframes
-		sv f;set f fs
-		valueu fend#1;set fend f
-		add fend ps#:presprite.size
-		while f!=fend
-			if f#!=(NULL) #can be also showframe
-				call restore_frame_free(f#)
-			end
-			incst f
-		end
-		call free(fs)
-		call free(ps)
-		incst pss
-	end
-	call free(predata#:preoadata.presprites)
-	call free(predata)
-end
-
-function restore_frame_free(valueu fr)
-	call restore_strings_free(fr#:preframe.restore_ustrings,fr#:preframe.ustrings,fr#:preframe.ussize)
-	call restore_strings_free(fr#:preframe.restore_dstrings,fr#:preframe.strings,fr#:preframe.ssize)
-	call restore_branch_free(fr#:preframe.abranch)
-end
-
-function restore_strings_free(valueu constpool,svu strs,dataxu size)
-	if size!=0  #not always having strings
-		sv cursor;set cursor strs
-		valueu end#1;set end strs
-		add end size
-		while cursor!=end
-			call free(cursor#)
-			incst cursor
-		end
-		call free(strs)
-		call free(constpool)
-	end
-end
-
-function restore_branch_free(valueu br)
-	call restore_branch_cuts_free(br)
-	call restore_branch_inners_free(br)
-	valueu sbr#1;set sbr br#:branch.subbranch
-	if sbr!=(NULL)
-		call restore_branch_free(sbr)
-	end
-	call free(br)
-end
-function restore_branch_cuts_free(valueu br)
-	valueu cursor#1;set cursor br#:branch.cuts
-	valueu end#1;set end cursor
-	add end br#:branch.size
-	while cursor!=end
-		call free(cursor#:branchcut.x)
-		add cursor \branchcut\
-	end
-	call free(br#:branch.cuts)
-end
-function restore_branch_inners_free(valueu br)
-	sv cursor;set cursor br#:branch.innerbranches
-	valueu end#1;set end cursor
-	add end br#:branch.isize
-	while cursor!=end
-		call restore_branch_free(cursor#)
-		incst cursor
-	end
-end
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/oad/string.oc actionswfnew/oad/string.oc
--- ./actionswf-1-132/oad/string.oc	2025-04-13 18:08:58.000000000 +0300
+++ actionswfnew/oad/string.oc	2025-04-21 08:48:48.175194459 +0300
@@ -102,6 +102,10 @@
 function printn(sv s)
 	call fputc((output_nl),s)
 end
+function print_inline_done()
+	sv so^stdout  #isn't at c an extra step? who cares, at o is not possible without this
+	call printn(so#)
+end
 function printt(ss str)
 	svu so^stdout  #isn't at c an extra step? who cares, at o, to put stdout an arg is like putting the pointer
 	call fputs(str,so#)
@@ -140,10 +144,6 @@
 	call putchar((Space))
 	call printt(format)
 end
-function print_inline_done()
-	sv so^stdout  #isn't at c an extra step? who cares, at o is not possible without this
-	call printn(so#)
-end
 
 import "memnl" memnl
 
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/readme.md actionswfnew/readme.md
--- ./actionswf-1-132/readme.md	2025-04-13 18:08:58.000000000 +0300
+++ actionswfnew/readme.md	2025-04-21 08:48:48.205194459 +0300
@@ -13,7 +13,7 @@
 \
 On Fedora, <i>.rpm</i> file from [releases](https://github.com/colin-i/actionswf/releases).
 ```sh
-yum install actionswf-*.*.rpm
+dnf install actionswf-*.*.rpm
 ```
 \
 On Windows, <i>.windows.zip</i> file from [releases](https://github.com/colin-i/actionswf/releases) has the dll.
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/src/Makefile actionswfnew/src/Makefile
--- ./actionswf-1-132/src/Makefile	2025-04-13 18:08:58.000000000 +0300
+++ actionswfnew/src/Makefile	2025-04-21 08:48:48.315194462 +0300
@@ -19,6 +19,9 @@
 linkerflags=-O3 -s
 #-O0 to 3 is same at .so here
 endif
+ifndef prefix
+prefix=/usr
+endif
 
 ifndef OSTRIP
 OSTRIP=ostrip
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/tests/asv actionswfnew/tests/asv
--- ./actionswf-1-132/tests/asv	2025-04-13 18:08:58.000000000 +0300
+++ actionswfnew/tests/asv	2025-04-21 08:48:48.945194475 +0300
@@ -2,7 +2,7 @@
 inc="include_sec 1"
 if [ -z "${conv_64}" ]; then conv_64=0
 elif [ ${conv_64} = 1 ]; then
-	if [ "`dpkg-architecture -qDEB_HOST_ARCH`" = "amd64" ]; then #cross
+	if [ "`dpkg-architecture -qDEB_HOST_ARCH`" != "i386" ]; then #cross
 		inc=
 	fi
 fi
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/tests/c actionswfnew/tests/c
--- ./actionswf-1-132/tests/c	2025-04-13 18:08:58.000000000 +0300
+++ actionswfnew/tests/c	2025-04-21 08:48:48.955194475 +0300
@@ -7,73 +7,75 @@
 	if [ -e .expected/a.swf.x ]; then rm .expected/a.swf.x; fi
 	if [ -e .expected/a.swf.x32 ]; then rm .expected/a.swf.x32; fi
 else
-. ./xxd
-smart_diff () {
-	diff ${1} ${2}
-	if [ $? = 0 ]; then
-		ok="${ok} + `du -b ${1}`"
-		return 0
-	fi
-	if [ -n "${3}" ]; then return 1; fi
-	a=`stat --printf="%s" ${1}`
-	b=`stat --printf="%s" ${2}`
-	base64 ${1}
-	echo
-	base64 ${2}
-	if [ ${a} = ${b} ]; then
-		echo size equal ${a}
-		if [ -n "`which xxd`" ]; then
-			xxd${xxd_args}${1} > 1
-			xxd${xxd_args}${2} > 2
-			diff 1 2
-			rm 1 2
-		fi
-	fi
-	return 1
-}
-smart_ask () {
-	stat --printf="\n%s\n" .expected/a.swf${1}
-	stat --printf="%s\n" a.swf${2}
-	echo y \? m \?; read -n1 -t $((60*60*24)) ans
-	if [ "${ans}" = "m" ]; then
-		if [ -z "${1}" ]; then
-			swfdump -D .expected/a.swf${1} > 1
-			swfdump -D a.swf${2} > 2
-		else
-			xxd${xxd_args}.expected/a.swf${1} > 1
-			xxd${xxd_args}a.swf${2} > 2
-		fi
-		diff 1 2
-		rm 1 2
-		echo y \?; read -n1 -t $((60*60*24)) ans
-	fi
-	if [ "${ans}" != "y" ]; then { echo not ok; exit 1; } fi
-	base64 a.swf${2} > .expected/a.swf${1}.txt #this is ok with ln
-}
-	base64 -d .expected/a.swf.txt > .expected/a.swf || { echo not ok; exit 1; }
-	smart_diff .expected/a.swf a.swf
-	if [ $? != 0 ]; then
-		if [ ${1} != 0 ]; then { echo not ok; exit 1; } fi
-		smart_ask
-	fi
+	. ./integ && {
+		. ./xxd
+		smart_diff () {
+			diff ${1} ${2}
+			if [ $? = 0 ]; then
+				ok="${ok} + `du -b ${1}`"
+				return 0
+			fi
+			if [ -n "${3}" ]; then return 1; fi
+			a=`stat --printf="%s" ${1}`
+			b=`stat --printf="%s" ${2}`
+			base64 ${1}
+			echo
+			base64 ${2}
+			if [ ${a} = ${b} ]; then
+				echo size equal ${a}
+				if [ -n "`which xxd`" ]; then
+					xxd${xxd_args}${1} > 1
+					xxd${xxd_args}${2} > 2
+					diff 1 2
+					rm 1 2
+				fi
+			fi
+			return 1
+		}
+		smart_ask () {
+			stat --printf="\n%s\n" .expected/a.swf${1}
+			stat --printf="%s\n" a.swf${2}
+			echo y \? m \?; read -n1 -t $((60*60*24)) ans
+			if [ "${ans}" = "m" ]; then
+				if [ -z "${1}" ]; then
+					swfdump -D .expected/a.swf${1} > 1
+					swfdump -D a.swf${2} > 2
+				else
+					xxd${xxd_args}.expected/a.swf${1} > 1
+					xxd${xxd_args}a.swf${2} > 2
+				fi
+				diff 1 2
+				rm 1 2
+				echo y \?; read -n1 -t $((60*60*24)) ans
+			fi
+			if [ "${ans}" != "y" ]; then { echo not ok; exit 1; } fi
+			base64 a.swf${2} > .expected/a.swf${1}.txt #this is ok with ln
+		}
 
-	if [ "${conv_64}" = 1 ]; then
-		v=32
-	fi
-	base64 -d .expected/a.swf.x${v}.txt > .expected/a.swf.x${v} || { echo not ok; exit 1; }
-	smart_diff .expected/a.swf.x${v} a.swf.x
-	if [ $? != 0 ]; then
-		if [ ${1} != 0 ]; then { echo not ok; exit 1; } fi
-		smart_ask .x${v} .x
-	fi
+		base64 -d .expected/a.swf.txt > .expected/a.swf || { echo not ok; exit 1; }
+		smart_diff .expected/a.swf a.swf
+		if [ $? != 0 ]; then
+			if [ ${1} != 0 ]; then { echo not ok; exit 1; } fi
+			smart_ask
+		fi
 
-	smart_diff .expected/a.swf.log a.swf.log x
-	if [ $? != 0 ]; then
-		if [ ${1} != 0 ]; then { echo not ok; exit 1; } fi
-		echo y \?; read -n1 -t $((60*60*24)) ans
-		if [ "${ans}" != "y" ]; then { echo not ok; exit 1; } fi
-		mv a.swf.log .expected
-	fi
+		if [ "${conv_64}" = 1 ]; then
+			v=32
+		fi
+		base64 -d .expected/a.swf.x${v}.txt > .expected/a.swf.x${v} || { echo not ok; exit 1; }
+		smart_diff .expected/a.swf.x${v} a.swf.x
+		if [ $? != 0 ]; then
+			if [ ${1} != 0 ]; then { echo not ok; exit 1; } fi
+			smart_ask .x${v} .x
+		fi
 
+		smart_diff .expected/a.swf.log a.swf.log x
+		if [ $? != 0 ]; then
+			if [ ${1} != 0 ]; then { echo not ok; exit 1; } fi
+			echo y \?; read -n1 -t $((60*60*24)) ans
+			if [ "${ans}" != "y" ]; then { echo not ok; exit 1; } fi
+			mv a.swf.log .expected
+		fi
+	}
 	echo ${ok}
 fi
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/tests/data/a actionswfnew/tests/data/a
--- ./actionswf-1-132/tests/data/a	2025-04-13 18:08:58.000000000 +0300
+++ actionswfnew/tests/data/a	2025-04-21 08:48:48.995194476 +0300
@@ -1,4 +1,7 @@
 #!/bin/sh
+
+CFLAGS=$(echo $(cat ../../oad/cflags) | grep -Poe "(?<==).*")
+
 if [ -n "${1}" ]; then
 	g="gdb -ex start --args"
 fi
@@ -15,6 +18,6 @@
 fi
 o a.oc x_file 1 && \
 otoc a.oc.x && \
-${CC} ${model} -w -g a.c -L../../oad -loadbgdata && \
+${CC} ${model} ${CFLAGS} -g a.c -L../../oad -loadbgdata && \
 LD_LIBRARY_PATH=../../oad ${g} ./a.out ${f} || { echo a.out error; exit 1; }
 #if [ -z "${d}" ]; then rm ${f}.data; else cp ${f}.data .; fi
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/tests/data/test actionswfnew/tests/data/test
--- ./actionswf-1-132/tests/data/test	2025-04-13 18:08:58.000000000 +0300
+++ actionswfnew/tests/data/test	2025-04-21 08:48:49.095194478 +0300
@@ -22,28 +22,31 @@
 status=`cat ./test.status`; rm ./test.status
 if [ ${status} != 0 ]; then  exit 1; fi          #set -o pipefail && a | tee || exit
 
-diff ../.expected/data${e}.txt data.txt
-if [ $? != 0 ]; then
-	if [ -n "${1}" ]; then exit 1; fi
-	echo y \?; read -n1 -t $((60*60*24)) ans
-	if [ "${ans}" != "y" ]; then exit 1; fi
-	cat data.txt>../.expected/data${e}.txt #a mv was here but now data32.txt is a hard link and will break that
-fi
+. ../integ && {
+	diff ../.expected/data${e}.txt data.txt
+	if [ $? != 0 ]; then
+		if [ -n "${1}" ]; then exit 1; fi
+		echo y \?; read -n1 -t $((60*60*24)) ans
+		if [ "${ans}" != "y" ]; then exit 1; fi
+		cat data.txt>../.expected/data${e}.txt #a mv was here but now data32.txt is a hard link and will break that
+	fi
 
-etestexp=../.expected/example.swf.data${e}
-etestexpt=${etestexp}.txt
-base64 -d ${etestexpt} > ${etestexp}
-diff ${etestexp} ${etest}
-if [ $? -ne 0 ]; then
-	if [ -n "${1}" ]; then exit 1; fi
-	. ../xxd
-	xxd${xxd_args} ${etestexp} > 1
-	xxd${xxd_args} ${etest} > 2
-	diff --color 1 2
-	rm 1 2
-	echo y \?; read -n1 -t $((60*60*24)) ans
-	if [ "${ans}" != "y" ]; then exit 1; fi
-	base64 ${etest} > ${etestexpt}
-fi
+	etestexp=../.expected/example.swf.data${e}
+	etestexpt=${etestexp}.txt
+	base64 -d ${etestexpt} > ${etestexp}
+	diff ${etestexp} ${etest}
+	if [ $? -ne 0 ]; then
+		if [ -n "${1}" ]; then exit 1; fi
+		. ../xxd
+		xxd${xxd_args} ${etestexp} > 1
+		xxd${xxd_args} ${etest} > 2
+		diff --color 1 2
+		rm 1 2
+		echo y \?; read -n1 -t $((60*60*24)) ans
+		if [ "${ans}" != "y" ]; then exit 1; fi
+		base64 ${etest} > ${etestexpt}
+	fi
 
-rm data.txt ${etestexp}
+	rm ${etestexp}
+}
+rm data.txt
diff '--exclude=.git' -ura --new-file ./actionswf-1-132/tests/integ actionswfnew/tests/integ
--- ./actionswf-1-132/tests/integ	1970-01-01 02:00:00.000000000 +0200
+++ actionswfnew/tests/integ	2025-04-21 08:48:49.305194483 +0300
@@ -0,0 +1,9 @@
+
+return_status() {
+	if [ ! -e .expected ]; then
+		echo .expected comparisons only at https://launchpad.net/~colin-i/+archive/ubuntu/ppa
+		return 1
+	fi
+	return 0
+}
+return_status
