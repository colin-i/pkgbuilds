diff '--exclude=.git' -ura --new-file ./edor-1-x71/readme.md edornew/readme.md
--- ./edor-1-x71/readme.md	2025-05-07 10:21:32.289317471 +0300
+++ edornew/readme.md	2025-05-07 10:21:51.479313638 +0300
@@ -25,7 +25,7 @@
 On linux distributions, <i>.AppImage</i> file from [releases](https://github.com/colin-i/edor/releases).
 
 ## From source
-Debian example: Install autoconf automake make libncurses-dev bc g++ ; on armv7l(alias armhf) cpu, libunwind-dev. There is a "headless" build file as well.
+Debian example: Install autoconf automake make libncurses-dev bc g++(or gcc and --disable-cpp at configure); on armv7l(alias armhf) cpu, libunwind-dev. There is a "headless" build file as well.
 ```sh
 autoreconf -i
 ./configure
diff '--exclude=.git' -ura --new-file ./edor-1-x71/s/bar.c edornew/s/bar.c
--- ./edor-1-x71/s/bar.c	2025-05-04 15:41:29.000000000 +0300
+++ edornew/s/bar.c	2025-05-07 10:21:51.789313577 +0300
@@ -179,7 +179,7 @@
 	for(size_t i=0;i<n;i++){
 		row*r=&rows[i];
 		if(wwrite(f,r->data,r->sz,awrite)==swrite_bad)return command_false;
-		if(write(f,ln_term,ln_term_sz)!=ln_term_sz)return command_false;
+		if(write(f,ln_term,ln_term_sz)!=(ssize_t)ln_term_sz)return command_false;
 	}
 	if(wwrite(f,rows[n].data,rows[n].sz,awrite)==swrite_ok)return command_ok;
 	return command_false;
@@ -565,7 +565,7 @@
 }
 int centeringy(WINDOW*w){
 	int hg=getmaxy(w)/2;
-	if(ytext<hg){hg=ytext;ytext=0;}
+	if(ytext<hg){hg=ytext;ytext=0;}//to silence rpmbuild warning, unsigned
 	else ytext=ytext-hg;
 	refreshpage(w);
 	return hg;
@@ -648,10 +648,10 @@
 	}
 	return command_false;
 }
-static void set_key(key_struct*from,char to){
+static void set_key(key_struct*from,unsigned char to){
 	memcpy(&keys[to],from,sizeof(key_struct));
 	if(keys[to].key_location!=nullptr){
-		char ix=keys[to].index;keys_row[ix]=to;
+		unsigned char ix=keys[to].index;keys_row[ix]=to;
 		changekey(to);
 	}
 }
@@ -661,8 +661,8 @@
 	if(is_a_z(0)){
 		if(is_a_z(1)){
 			if(input0[2]=='\0'){
-				char from=*input0-'a';
-				char to=input0[1]-'a';
+				unsigned char from=*input0-'a';
+				unsigned char to=input0[1]-'a';
 				key_struct aux;
 				memcpy(&aux,&keys[to],sizeof(key_struct));
 				set_key(&keys[from],to);
diff '--exclude=.git' -ura --new-file ./edor-1-x71/s/base.h edornew/s/base.h
--- ./edor-1-x71/s/base.h	2025-05-07 10:21:32.439317440 +0300
+++ edornew/s/base.h	2025-05-07 10:21:51.889313558 +0300
@@ -2,8 +2,9 @@
 
 //can add //comment if a macro in a set is only for a file but don't spread them and make a mess
 
+#include "def.h"
+
 //main,bar
-#define bar_byte unsigned char
 #define bar_byte_plus short
 #define com_nr_find 0
 #define com_nr_findagain 1
@@ -72,7 +73,7 @@
 //main
 //bar
 int c_to_xc(int,int);
-void changekey(char);
+void changekey(unsigned char);
 void cpymembuf(size_t,row_dword,size_t,row_dword,char*);
 void deleting(size_t,size_t,size_t,size_t);
 bool deleting_init(size_t,row_dword,size_t,row_dword);
@@ -210,6 +211,3 @@
 extern char*split_extension_new;
 //bar
 swrite_char swrite(int,void*,unsigned int);
-
-
-#include "def.h"
diff '--exclude=.git' -ura --new-file ./edor-1-x71/s/def.h edornew/s/def.h
--- ./edor-1-x71/s/def.h	2025-05-04 15:41:29.000000000 +0300
+++ edornew/s/def.h	2025-05-07 10:21:51.979313540 +0300
@@ -6,6 +6,7 @@
 extern row*rows;
 extern size_t rows_tot;
 //bar,split
+#define bar_byte unsigned char
 extern char ln_term[3];
 extern size_t ln_term_sz;
 //split
diff '--exclude=.git' -ura --new-file ./edor-1-x71/s/main.c edornew/s/main.c
--- ./edor-1-x71/s/main.c	2025-05-04 15:41:29.000000000 +0300
+++ edornew/s/main.c	2025-05-07 10:21:55.409312875 +0300
@@ -484,7 +484,7 @@
 
 char orig_key(char now_key,char mod){
 	key_struct*now=&keys[now_key-'A'];
-	char ix=now->index;
+	unsigned char ix=now->index;
 	char orig=keys_row_orig[ix]+'A';
 	return orig+mod;
 }
@@ -1119,7 +1119,7 @@
 	size_t z1=ytext;row_dword z2=xtext;size_t z3=r;
 	size_t rws=cutbuf_r-1;
 	r+=rws;int maxy=getmaxy(w);
-	if(maxy<=r){
+	if(maxy<=r){ //to silence rpmbuild warning, unsigned
 		ytext+=r-maxy+1;
 		r=maxy-1;
 	}
@@ -2133,7 +2133,7 @@
 	return true;
 }
 
-void changekey(char i){
+void changekey(unsigned char i){
 	key_struct*k=&keys[i];
 	char newkey=i+_0_to_A;
 	*(k->key_location)=newkey;
@@ -2251,13 +2251,13 @@
 					if(restorefile!=nullptr)unlink(restorefile);//here restorefile is deleted
 					return false;
 				}else if(chr==key_insens){
-					bool b;char c;
+					char c;
 					if(insensitive/*true*/){insensitive=false;c=orig_lowkey(key_insens);}
 					else{insensitive=true;c=orig_upkey(key_insens);}
 					setprefs(mask_insensitive,insensitive);//here the bit is set on full insensitive search
 					vis(c,w);//is not showing on stdscr without wnoutrefresh(thisWindow)
 				}else if(chr==key_mouse){
-					bool b;char c;
+					char c;
 					if(stored_mouse_mask_q){stored_mouse_mask=mousemask(0,nullptr);c=orig_lowkey(key_mouse);setprefs(mask_mouse,false);}
 					else{stored_mouse_mask=mousemask(ALL_MOUSE_EVENTS,nullptr);c=orig_upkey(key_mouse);setprefs(mask_mouse,true);}
 					vis(c,w);
@@ -2391,8 +2391,8 @@
 			puts("\" is a directory");
 		}
 		else{
-			size_t size=(size_t)lseek(fd,0,SEEK_END);
-			if(size!=-1){
+			size_t size=lseek(fd,0,SEEK_END);
+			if(size!=(size_t)-1){
 				text_init_b=(char*)malloc(size);
 				if(text_init_b!=nullptr){
 					lseek(fd,0,SEEK_SET);
@@ -2429,7 +2429,7 @@
 }
 
 static void getkeys(char kp){
-	for(char i=0;i<number_of_keys;i++){
+	for(unsigned char i=0;i<number_of_keys;i++){
 		unsigned char ix;//this is unsigned because is unknown read
 		if(i<kp){
 			ix=keys_row_frompref[i];
@@ -2439,12 +2439,12 @@
 			//keys_row_frompref[i]=ix; is already at define time
 		}
 		if(keys_frompref[ix].key_location!=nullptr)return;
-		char ix_orig=keys_row_orig[i];
+		unsigned char ix_orig=keys_row_orig[i];
 		memcpy(&keys_frompref[ix],&keys_orig[ix_orig],sizeof(key_struct));
 	}
 	keys=keys_frompref;
 	keys_row=keys_row_frompref;
-	for(char i=0;i<number_of_keys;i++){
+	for(unsigned char i=0;i<number_of_keys;i++){
 		char ix=keys_row[i];
 		if(keys_row_orig[i]!=ix){
 			changekey(ix);
@@ -2525,8 +2525,8 @@
 		cutbuf_file[off]=store;
 	}*/
 	if(f!=-1){
-		size_t sz=(size_t)lseek(f,0,SEEK_END);
-		if(sz!=0&&sz!=-1){
+		size_t sz=lseek(f,0,SEEK_END);
+		if(sz!=(size_t)-1&&sz!=0){
 			char*v=(char*)malloc(sz);
 			if(v!=nullptr){
 				lseek(f,0,SEEK_SET);
diff '--exclude=.git' -ura --new-file ./edor-1-x71/s/split.c edornew/s/split.c
--- ./edor-1-x71/s/split.c	2025-05-04 15:41:29.000000000 +0300
+++ edornew/s/split.c	2025-05-07 10:21:56.309312701 +0300
@@ -195,8 +195,8 @@
 		if(split_reminder_c!=split_no){// yes_mixless or yes_mix
 			char*text;size_t size;int cmp;char*next;
 			char a=*sdelimiter;
-			unsigned char sdelimsize=strlen(sdelimiter);//at file read only one byte for size
-			unsigned char esdelimsize=strlen(esdelimiter);//same from preferences
+			bar_byte sdelimsize=strlen(sdelimiter);//also at file read only one byte for size
+			bar_byte esdelimsize=strlen(esdelimiter);//same from preferences
 
 			//calculate number of explodes
 			size_t explodes=0;
@@ -205,7 +205,7 @@
 				next=(char*)memchr(text,a,size);
 				if(next==nullptr)break;
 				next++;size-=next-text;
-				if(size<=(sdelimsize-1))break;
+				if(size<=(sdelimsize-1))break;  //both are unsigned, don't know why rpmbuild is saying sdelimsize-1 is int
 				cmp=memcmp(next,sdelimiter+1,sdelimsize-1);
 				text=next+(sdelimsize-1);size-=text-next;
 				if(cmp!=0)continue;
