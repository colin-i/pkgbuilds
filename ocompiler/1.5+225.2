diff '--exclude=.git' -ura --new-file ./o-1-5-225/arh/pub onew/arh/pub
--- ./o-1-5-225/arh/pub	2025-04-09 06:38:21.000000000 +0000
+++ onew/arh/pub	2025-04-20 06:18:05.644542922 +0000
@@ -6,8 +6,9 @@
 fi
 last=`curl https://api.github.com/repos/colin-i/o/releases/latest -s | jq .tag_name -r` && echo ${last} && \
 ~/test/keyring2 && \
-~/test/arh2 ${last} && \
+arhstore_exclude_file=obj.txt ~/test/arh3 ${last} && \
 ~/test/arhpub ${last} && \
+from_env_files="\*rpm .windows.zip" ~/test/del x && \
 #here must arh fast to push changelog + old file same time
 afterversion=./test32local ~/test/debinit2 "${1}" && \
 #there are problems at amd64xenial, not at bionic. can use xi386 amd64 at b but then will be a mess to copy both x and normal version from bionic onward
@@ -16,16 +17,16 @@
 #if copy will not work because of already published error, manual "Copy binaries" and will also rebuild missing amd64
 ~/u/desktop/ubuntu-archive-tools/copy-package -y --from ppa:colin-i/ubuntu/ppa -s xenial --to-suite bionic ocompiler && \
 ~/test/publp && \
-./makewin32 && \
+~/test/ai && \
+~/test/rpm && \
 ~/test/del && \
 ~/test/rel && \
-~/test/pub rel && \
-~/test/up && \
-~/test/rpm && \
-~/test/pub rpm && \
-~/test/ai && \
-~/test/pub appimage && \
+./makewin32 && \
+~/test/pub appimage rpm rel && \
 ~/test/upapp && \
+~/test/up && \
+./mrtext && \
+~/test/upgen txt obj.txt && \
 ~/test/pub upapp && \
 ~/test/pub2 && \
 arch=i386 terminator=1 ~/test/publp2 && \
diff '--exclude=.git' -ura --new-file ./o-1-5-225/debian/source/include-binaries onew/debian/source/include-binaries
--- ./o-1-5-225/debian/source/include-binaries	2025-04-09 06:38:21.000000000 +0000
+++ onew/debian/source/include-binaries	2025-04-20 06:18:05.824543120 +0000
@@ -1,2 +1 @@
-../../../../dev/null
 ../../../../../dev/null
diff '--exclude=.git' -ura --new-file ./o-1-5-225/.github/workflows/appimage.yml onew/.github/workflows/appimage.yml
--- ./o-1-5-225/.github/workflows/appimage.yml	2025-04-09 06:38:21.000000000 +0000
+++ onew/.github/workflows/appimage.yml	2025-04-20 06:18:05.484542746 +0000
@@ -102,10 +102,6 @@
        cd usr/bin
        cat > ${name} <<EOF
       #!/bin/sh
-      if [ "\${1}" != "0" ] && [ "\${1}" != "1" ] && [ "\${1}" != "2" ] && [ "\${1}" != "3" ] ; then
-       echo first argument: 0 for ocompiler, 1 for ounused, 2 for otoc, 3 for ostrip
-       exit 1
-      fi
       cd "\$(dirname "\$0")"
       if [ "\${1}" = "0" ]; then
        cmd=o
@@ -114,8 +110,11 @@
       else
        if [ "\${1}" = "2" ]; then
         cmd=otoc
-       else
+       elif [ "\${1}" = "3" ]; then
         cmd=ostrip
+       else
+        echo first argument: 0 for ocompiler, 1 for ounused, 2 for otoc, 3 for ostrip
+        exit 1
        fi
        shift
        ./\${cmd} "\$@"
diff '--exclude=.git' -ura --new-file ./o-1-5-225/.github/workflows/delocompiler.yml onew/.github/workflows/delocompiler.yml
--- ./o-1-5-225/.github/workflows/delocompiler.yml	1970-01-01 00:00:00.000000000 +0000
+++ onew/.github/workflows/delocompiler.yml	2025-04-20 06:18:05.514542779 +0000
@@ -0,0 +1,20 @@
+
+on:
+ # Allows you to run this workflow manually from the Actions tab
+ workflow_dispatch:
+
+# A workflow run is made up of one or more jobs that can run sequentially or in parallel
+jobs:
+ # This workflow contains a single job called "build"
+ del:
+  # The type of runner that the job will run on
+  runs-on: ubuntu-18.04
+  # Steps represent a sequence of tasks that will be executed as part of the job
+  steps:
+   - name: Remove asset
+     uses: mknejp/delete-release-assets@v1
+     env:
+     with:
+      token: ${{ secrets.PAT }}
+      tag: refs/tags/${{ env.tag }}
+      assets: ${{ env.file }}
diff '--exclude=.git' -ura --new-file ./o-1-5-225/.github/workflows/delrel.yml onew/.github/workflows/delrel.yml
--- ./o-1-5-225/.github/workflows/delrel.yml	2025-04-09 06:38:21.000000000 +0000
+++ onew/.github/workflows/delrel.yml	1970-01-01 00:00:00.000000000 +0000
@@ -1,15 +0,0 @@
-
-on:
- workflow_dispatch:
-  inputs:
-   tag:
-    description: "project version"
-
-jobs:
- delrel:
-   runs-on: ubuntu-latest
-   steps:
-    - uses: cb80/delrel@latest
-      with:
-       tag: ${{ github.event.inputs.tag }}
-       token: ${{ secrets.PAT }}
diff '--exclude=.git' -ura --new-file ./o-1-5-225/.github/workflows/del.yml onew/.github/workflows/del.yml
--- ./o-1-5-225/.github/workflows/del.yml	2025-04-09 06:38:21.000000000 +0000
+++ onew/.github/workflows/del.yml	1970-01-01 00:00:00.000000000 +0000
@@ -1,20 +0,0 @@
-
-on:
- # Allows you to run this workflow manually from the Actions tab
- workflow_dispatch:
-
-# A workflow run is made up of one or more jobs that can run sequentially or in parallel
-jobs:
- # This workflow contains a single job called "build"
- del:
-  # The type of runner that the job will run on
-  runs-on: ubuntu-18.04
-  # Steps represent a sequence of tasks that will be executed as part of the job
-  steps:
-   - name: Remove asset
-     uses: mknejp/delete-release-assets@v1
-     env:
-     with:
-      token: ${{ secrets.PAT }}
-      tag: refs/tags/${{ env.tag }}
-      assets: ${{ env.file }}
diff '--exclude=.git' -ura --new-file ./o-1-5-225/.github/workflows/pkg.yml onew/.github/workflows/pkg.yml
--- ./o-1-5-225/.github/workflows/pkg.yml	1970-01-01 00:00:00.000000000 +0000
+++ onew/.github/workflows/pkg.yml	2025-04-20 06:18:05.524542790 +0000
@@ -0,0 +1,49 @@
+
+on:
+ workflow_dispatch:
+env:
+ #for upload
+ GITHUB_TOKEN: ${{ secrets.PAT }}
+
+jobs:
+ archbuild:
+  runs-on: ubuntu-latest
+  container: archlinux:latest
+
+  steps:
+  - name: Checkout
+    uses: actions/checkout@v3
+  - name: build
+    run: |
+     name=`cat debian/changelog | head -1 | grep -o ^[^\ ]*`
+     here=`pwd`
+
+     useradd bot
+     cd /home
+     mkdir bot
+     chown bot:bot bot
+     cd bot
+
+     pacman -Sy --noconfirm --needed git base-devel wget
+     su bot -c 'git clone -n --depth=1 --filter=tree:0 https://github.com/colin-i/pkgbuilds'
+     cd pkgbuilds
+     su bot -c "git sparse-checkout set --no-cone /${name}"
+     su bot -c 'git checkout'
+     cd ${name}
+     pacman -S --noconfirm lib32-glibc bc
+     su bot -c makepkg
+     ls
+     nm=`ls | grep ".*\.zst$" | grep -v debug`
+     nm2=`echo ${nm} | sed s/-any/-arch-x86_64/`
+     mv ${nm} ${here}/${nm2}
+     echo "file=${nm2}" >> $GITHUB_ENV
+
+     wget https://github.com/colin-i/test/releases/download/1.5/${name} -O 1.txt
+     echo "up_url=`cat 1.txt`" >> $GITHUB_ENV
+  - name: Upload Release Asset
+    uses: actions/upload-release-asset@v1
+    with:
+     upload_url: ${{ env.up_url }}
+     asset_path: ./${{ env.file }}
+     asset_name: ${{ env.file }}
+     asset_content_type: application/zstd
diff '--exclude=.git' -ura --new-file ./o-1-5-225/.github/workflows/upocompiler.yml onew/.github/workflows/upocompiler.yml
--- ./o-1-5-225/.github/workflows/upocompiler.yml	1970-01-01 00:00:00.000000000 +0000
+++ onew/.github/workflows/upocompiler.yml	2025-04-20 06:18:05.584542856 +0000
@@ -0,0 +1,30 @@
+
+on:
+ workflow_dispatch:
+
+# A workflow run is made up of one or more jobs that can run sequentially or in parallel
+jobs:
+ # This workflow contains a single job called "build"
+ ubuild:
+  # The type of runner that the job will run on
+  runs-on: ubuntu-18.04 #latest is ok but it must be downloaded first
+  # Steps represent a sequence of tasks that will be executed as part of the job
+  steps:
+   #token or opts.auth is required (maybe at remote)
+   - name: Run a multi-line script
+     run: |
+      if [ -n "${{ env.init }}" ]; then
+       exit 1
+      fi
+      #get up_url
+      wget https://github.com/colin-i/test/releases/download/1.5/${{ env.proj }} -O 1.txt
+      echo "up_url=`cat 1.txt`" >> $GITHUB_ENV
+   - name: Upload Release Asset
+     uses: actions/upload-release-asset@v1
+     env:
+      GITHUB_TOKEN: ${{ secrets.PAT }}
+     with:
+      upload_url: ${{ env.up_url }}
+      asset_path: ./${{ env.proj }}.zip
+      asset_name: ${{ env.proj }}.windows.zip
+      asset_content_type: application/zip
diff '--exclude=.git' -ura --new-file ./o-1-5-225/.github/workflows/uptxtocompiler.yml onew/.github/workflows/uptxtocompiler.yml
--- ./o-1-5-225/.github/workflows/uptxtocompiler.yml	1970-01-01 00:00:00.000000000 +0000
+++ onew/.github/workflows/uptxtocompiler.yml	2025-04-20 06:18:05.594542867 +0000
@@ -0,0 +1,25 @@
+
+on:
+ workflow_dispatch:
+
+jobs:
+ ubuildtxt:
+  runs-on: ubuntu-18.04
+  steps:
+   - name: Run a multi-line script
+     run: |
+      if [ -n "${{ env.init }}" ]; then
+       exit 1
+      fi
+      #get up_url
+      wget https://github.com/colin-i/test/releases/download/1.5/${{ env.proj }} -O 1.txt
+      echo "up_url=`cat 1.txt`" >> $GITHUB_ENV
+   - name: Upload Release Asset
+     uses: actions/upload-release-asset@v1
+     env:
+      GITHUB_TOKEN: ${{ secrets.PAT }}
+     with:
+      upload_url: ${{ env.up_url }}
+      asset_path: ./${{ env.fname }}
+      asset_name: ${{ env.fname }}
+      asset_content_type: text/plain
diff '--exclude=.git' -ura --new-file ./o-1-5-225/.github/workflows/up.yml onew/.github/workflows/up.yml
--- ./o-1-5-225/.github/workflows/up.yml	2025-04-09 06:38:21.000000000 +0000
+++ onew/.github/workflows/up.yml	1970-01-01 00:00:00.000000000 +0000
@@ -1,30 +0,0 @@
-
-on:
- workflow_dispatch:
-
-# A workflow run is made up of one or more jobs that can run sequentially or in parallel
-jobs:
- # This workflow contains a single job called "build"
- ubuild:
-  # The type of runner that the job will run on
-  runs-on: ubuntu-18.04 #latest is ok but it must be downloaded first
-  # Steps represent a sequence of tasks that will be executed as part of the job
-  steps:
-   #token or opts.auth is required (maybe at remote)
-   - name: Run a multi-line script
-     run: |
-      if [ -n "${{ env.init }}" ]; then
-       exit 1
-      fi
-      #get up_url
-      wget https://github.com/colin-i/test/releases/download/1.5/${{ env.proj }} -O 1.txt
-      echo "up_url=`cat 1.txt`" >> $GITHUB_ENV
-   - name: Upload Release Asset
-     uses: actions/upload-release-asset@v1
-     env:
-      GITHUB_TOKEN: ${{ secrets.PAT }}
-     with:
-      upload_url: ${{ env.up_url }}
-      asset_path: ./${{ env.proj }}.zip
-      asset_name: ${{ env.proj }}.windows.zip
-      asset_content_type: application/zip
diff '--exclude=.git' -ura --new-file ./o-1-5-225/.gitignore onew/.gitignore
--- ./o-1-5-225/.gitignore	2025-04-09 06:38:21.000000000 +0000
+++ onew/.gitignore	1970-01-01 00:00:00.000000000 +0000
@@ -1 +0,0 @@
-/localtest
\ No newline at end of file
diff '--exclude=.git' -ura --new-file ./o-1-5-225/localtest onew/localtest
--- ./o-1-5-225/localtest	1970-01-01 00:00:00.000000000 +0000
+++ onew/localtest	2025-04-20 06:18:05.964543275 +0000
@@ -0,0 +1 @@
+1-5+225
diff '--exclude=.git' -ura --new-file ./o-1-5-225/Makefile onew/Makefile
--- ./o-1-5-225/Makefile	2025-04-09 06:38:21.000000000 +0000
+++ onew/Makefile	2025-04-20 06:18:05.604542878 +0000
@@ -3,12 +3,13 @@
 
 #NOOCONV ? is at debian/ocompiler.install , will install here but not in the final deb
 
-ifeq ($(shell dpkg-architecture -qDEB_HOST_ARCH), amd64)
-SUBDIRS := src ounused ostrip otoc
-conv_64=0
-else
+#this at pkgbuild, must set because is not found dpkg-architecture, and that is making ifeq i386 not same as ifneq amd64
+ifeq ($(shell dpkg-architecture -qDEB_HOST_ARCH), i386)
 SUBDIRS := src ounused otoc
 conv_64=1
+else
+SUBDIRS := src ounused ostrip otoc
+conv_64=0
 endif
 
 #all must be first rule (rule: ...) to be executed in case of make with no args
diff '--exclude=.git' -ura --new-file ./o-1-5-225/mrtext onew/mrtext
--- ./o-1-5-225/mrtext	1970-01-01 00:00:00.000000000 +0000
+++ onew/mrtext	2025-04-20 06:18:06.034543352 +0000
@@ -0,0 +1 @@
+cd src && ./mrtext && make clean
\ No newline at end of file
diff '--exclude=.git' -ura --new-file ./o-1-5-225/ostrip/Makefile onew/ostrip/Makefile
--- ./o-1-5-225/ostrip/Makefile	2025-04-09 06:38:21.000000000 +0000
+++ onew/ostrip/Makefile	2025-04-20 06:18:06.104543429 +0000
@@ -29,6 +29,10 @@
 OCOMP=../src/o
 endif
 
+ifndef prefix
+prefix=/usr
+endif
+
 OBJ = ${OB}.o
 OBT = ${OB}.txt
 FULLOBJ = ./${OB}
@@ -41,7 +45,8 @@
 	${launcher} ${OCOMP} $< ${OFLAGS}
 
 ATCCCOM = $(CC) ${linkerflags} -o
-ATLDCOM = $(LD) --dynamic-linker=/lib64/ld-linux-x86-64.so.2 ${linkerflags} ${L} -lc -entry main -o
+ATLDCOM = $(LD) --dynamic-linker=/lib64/ld-linux-x86-64.so.2 ${linkerflags} ${L} -l:libc.so.6 -entry main -o
+#strange that aarch64 cross ld can't -lc but -l:libc.so.6
 
 ${OB}: ${OBJ}
 	${launcher} ${OLINK} ${FULLOBJLOG}
diff '--exclude=.git' -ura --new-file ./o-1-5-225/ostrip/mrd onew/ostrip/mrd
--- ./o-1-5-225/ostrip/mrd	2025-04-09 06:38:21.000000000 +0000
+++ onew/ostrip/mrd	2025-04-20 06:18:06.224543561 +0000
@@ -1,2 +1,5 @@
 
-launcher=q LD_LIBRARY_PATH=/home/bc/before LD=/home/bc/before/x86_64-linux-gnu-ld.bfd L=-L/home/bc/before/lib OFLAGSEXTRA="inplace_reloc 0" ./md
+launcher=q LD=/usr/x86_64-linux-gnu/bin/ld OFLAGSEXTRA="inplace_reloc 0" ./md
+
+#old:
+#launcher=q LD_LIBRARY_PATH=/home/bc/before LD=/home/bc/before/x86_64-linux-gnu-ld.bfd L=-L/home/bc/before/lib OFLAGSEXTRA="inplace_reloc 0" ./md
diff '--exclude=.git' -ura --new-file ./o-1-5-225/otoc/Makefile onew/otoc/Makefile
--- ./o-1-5-225/otoc/Makefile	2025-04-09 06:38:21.000000000 +0000
+++ onew/otoc/Makefile	2025-04-20 06:18:06.334543682 +0000
@@ -15,6 +15,12 @@
 ifndef conv_64
 conv_64=0
 endif
+ifndef ldprefer
+OFLAGSPRE= include_sec 1
+endif
+ifndef prefix
+prefix=/usr
+endif
 
 OBJ = ${prog}.o
 FULLOBJ = ./${prog}
@@ -22,15 +28,11 @@
 FULLOBJO = ${FULLOBJ}.o
 FULLOBJLOG = ${FULLOBJS}.log
 
-
-ifndef ldprefer
-	OFLAGSPRE= include_sec 1
-endif
-
 #problems at box64 and CC
 ifeq (${conv_64},0)
 	ATCCCOM = $(CC) ${linkerflags} -o
-	ATLDCOM = $(LD) --dynamic-linker=/lib64/ld-linux-x86-64.so.2 ${linkerflags} ${L} -lc -entry main -o
+	ATLDCOM = $(LD) --dynamic-linker=/lib64/ld-linux-x86-64.so.2 ${linkerflags} ${L} -l:libc.so.6 -entry main -o
+	#same like ostrip for libc.so.6
 else
 	ATCCCOM = $(CC) -m32 ${linkerflags} -o
 	ATLDCOM = $(LD) -melf_i386 --dynamic-linker=/lib/ld-linux.so.2 ${linkerflags} ${L} -lc -entry main -o
@@ -53,7 +55,7 @@
 		${ATLDCOM} $@ $^; \
 	fi
 ${number}: number.pre
-	./$<
+	${launcher} ./$<
 #       in case otoc.oc is modified
 ${OBJ}: ${FULLOBJS} ${number}
 	${OCOMP} $< ${OFLAGS}
diff '--exclude=.git' -ura --new-file ./o-1-5-225/otoc/mrd onew/otoc/mrd
--- ./o-1-5-225/otoc/mrd	2025-04-09 06:38:21.000000000 +0000
+++ onew/otoc/mrd	2025-04-20 06:18:06.514543880 +0000
@@ -1,12 +1,12 @@
 
 if [ -e otoc.o ]; then rm otoc.o; fi
+if [ -z "${1}" ]; then OCOMP="q ../src/o"; fi
+
+launcher=qq OCOMP=${OCOMP} LD=/usr/x86_64-linux-gnu/bin/ld OFLAGSEXTRA="inplace_reloc 0" ldprefer=1 ./md
 
+#old:
 #saying this?: cannot find /usr/x86_64-linux-gnu/lib/libc.so.6
 # sudo ln -s /home/bc/before/lib/libc.so.6 /usr/x86_64-linux-gnu/lib/libc.so.6
 #            and for libc_nonshared.a and ld-linux-x86-64.so.2
-
-if [ -z "${1}" ]; then OCOMP="q ../src/o"; fi
-
-OCOMP=${OCOMP} LD_LIBRARY_PATH=/home/bc/before LD=/home/bc/before/x86_64-linux-gnu-ld.bfd L=-L/home/bc/before/lib OFLAGSEXTRA="inplace_reloc 0" ldprefer=1 ./md
-
+#OCOMP=${OCOMP} LD_LIBRARY_PATH=/home/bc/before LD=/home/bc/before/x86_64-linux-gnu-ld.bfd L=-L/home/bc/before/lib OFLAGSEXTRA="inplace_reloc 0" ldprefer=1 ./md
 #if qemu too, must comment in qemu-x86_64.conf (from qemu-user-binfmt)
diff '--exclude=.git' -ura --new-file ./o-1-5-225/ounused/Makefile onew/ounused/Makefile
--- ./o-1-5-225/ounused/Makefile	2025-04-09 06:38:21.000000000 +0000
+++ onew/ounused/Makefile	2025-04-20 06:18:06.644544023 +0000
@@ -18,6 +18,10 @@
 #             1
 endif
 
+ifndef prefix
+prefix=/usr
+endif
+
 ver=version.h
 vers=../${ver}
 ${vers}:
@@ -26,7 +30,7 @@
 ${FULLOBJO}: ${FULLOBJS} ${vers}
 	${launcher} ${OCOMP} $< exit_end 1 ${OFLAGSEXTRA}
 
-ATLDCOM = $(LD) ${linkerflags} -melf_i386 --dynamic-linker=/lib/ld-linux.so.2 -o $@ -lc -entry main
+ATLDCOM = $(LD) ${linkerflags} -melf_i386 --dynamic-linker=/lib/ld-linux.so.2 -o $@ ${L} -lc -entry main
 
 ${OB}: ${OBJ}
 	${ATLDCOM} ${FULLOBJO}
diff '--exclude=.git' -ura --new-file ./o-1-5-225/ounused/mrd onew/ounused/mrd
--- ./o-1-5-225/ounused/mrd	2025-04-09 06:38:21.000000000 +0000
+++ onew/ounused/mrd	2025-04-20 06:18:06.784544177 +0000
@@ -1,2 +1,2 @@
 
-launcher=q LD_LIBRARY_PATH=/home/bc/before LD=/home/bc/before/i686-linux-gnu-ld.bfd ./md
+launcher=q LD=/usr/i686-linux-gnu/bin/ld ./md
diff '--exclude=.git' -ura --new-file ./o-1-5-225/readme.md onew/readme.md
--- ./o-1-5-225/readme.md	2025-04-09 06:38:21.000000000 +0000
+++ onew/readme.md	2025-04-20 06:18:06.884544287 +0000
@@ -15,7 +15,7 @@
 \
 On Fedora, <i>.rpm</i> file from [releases](https://github.com/colin-i/o/releases).
 ```sh
-yum install ocompiler-*.*.rpm
+dnf install ocompiler-*.*.rpm
 ```
 \
 On Windows, <i>.windows.zip</i> file from [releases](https://github.com/colin-i/o/releases).
diff '--exclude=.git' -ura --new-file ./o-1-5-225/src/Makefile onew/src/Makefile
--- ./o-1-5-225/src/Makefile	2025-04-09 06:38:21.000000000 +0000
+++ onew/src/Makefile	2025-04-20 06:18:06.924544331 +0000
@@ -57,15 +57,15 @@
 		echo text; \
 		base64 -d ${OBT} > $@; \
 		${_ATLDCOM} o $@; \
-		./o ${FULLOBJS}; \
+		${launcher} ./o ${FULLOBJS} ${OFLAGS}; \
 	else \
 		${OCOMP} $< ${OFLAGS}; \
 	fi; \
 	mv ${FULLOBJO} . \
 
-_ATLDCOM = $(LD) ${linkerflags} -melf_i386 --dynamic-linker=${linker} -lc -entry main -o
+_ATLDCOM = $(LD) ${linkerflags} -melf_i386 --dynamic-linker=${linker} ${L} -lc -entry main -o
 ATLDCOM = ${_ATLDCOM} $@
-ATLDCOM_T_O = $(LD) -melf_i386 --dynamic-linker=${linker} -lc -entry main -o z ${FULLOBJO}
+ATLDCOM_T_O = $(LD) -melf_i386 --dynamic-linker=${linker} ${L} -lc -entry main -o z ${FULLOBJO}
 
 ${etcinclude}:
 	echo sd etchelper=${etchelper}\;ss etc_helper=\"${etc_helper}\" > ${etcinclude}
@@ -125,4 +125,14 @@
 #there is a backport in ppa-stagging for jammy
 #still at xenial/bionic but launchpad stop working for ./z . solution? local test
 
+${OBT}: ${FULLOBJS} ${etcinclude} ${vers}
+	${OCOMP} ${FULLOBJS} ${OFLAGS}
+	base64 ${FULLOBJO} > $@
+	$(MAKE) ${OBJ}
+	base64 ${OBJ} > $@2
+	diff $@ $@2
+	rm $@2
+	mv $@ ..
+	echo ok
+
 .PHONY: all install install-proj clean clean-compile clean-link clean-test clean-test-obj distclean uninstall test test-obj
diff '--exclude=.git' -ura --new-file ./o-1-5-225/src/mrd onew/src/mrd
--- ./o-1-5-225/src/mrd	2025-04-09 06:38:21.000000000 +0000
+++ onew/src/mrd	2025-04-20 06:18:08.714546302 +0000
@@ -1,15 +1,15 @@
 
 if [ -e obj.o ]; then rm obj.o; fi
 
-LD_LIBRARY_PATH=/home/bc/before LD=/home/bc/before/i686-linux-gnu-ld.bfd ./md
+LD=/usr/i686-linux-gnu/bin/ld ./md $@
 
+#old:
+#LD_LIBRARY_PATH=/home/bc/before LD=/home/bc/before/i686-linux-gnu-ld.bfd ./md
 #and for qemu o will be:
 # LD_LIBRARY_PATH=/home/bc/Desktop/libc_i386/usr/lib/i386-linux-gnu /home/bc/Desktop/libc_i386/usr/lib/i386-linux-gnu/ld-linux.so.2 /home/bc/x86_64_orig/o "$@"
-
 #and q:
 # !/bin/bash
 # LD_LIBRARY_PATH+=:/home/bc/Desktop/libc_i386/usr/lib/i386-linux-gnu
 # LD_LIBRARY_PATH=${LD_LIBRARY_PATH} qemu-i386 /home/bc/Desktop/libc_i386/usr/lib/i386-linux-gnu/ld-linux.so.2 "$@"
-
 #here libc-i386 is the latest noble 2.39-0ubuntu8
 #not recommended: ln -s to /lib/ld-linux.so.2 and add LD_LIBRARY_PATH somehow
diff '--exclude=.git' -ura --new-file ./o-1-5-225/src/mrtext onew/src/mrtext
--- ./o-1-5-225/src/mrtext	1970-01-01 00:00:00.000000000 +0000
+++ onew/src/mrtext	2025-04-20 06:18:08.734546324 +0000
@@ -0,0 +1,2 @@
+
+launcher=q LD=/usr/i686-linux-gnu/bin/ld OFLAGS="nul_res_pref 1" make linkerflags= obj.txt
diff '--exclude=.git' -ura --new-file ./o-1-5-225/tests/c onew/tests/c
--- ./o-1-5-225/tests/c	2025-04-09 06:38:21.000000000 +0000
+++ onew/tests/c	2025-04-20 06:18:09.354547006 +0000
@@ -1,12 +1,18 @@
 #!/bin/bash
+e=.expected/
 if [ -z "${1}" ]; then
 	is_del=1
 else
 	is_del=0
 	is_diff=${1}   # ./c 1 is diff, else(example: 0) to populate .expected
 	diffs=0
+	if [ ${is_diff} = 1 ]; then
+		if [ ! -e ${e} ]; then
+			echo ${e} comparisons only at https://launchpad.net/~colin-i/+archive/ubuntu/ppa
+			exit 0
+		fi
+	fi
 fi
-e=.expected/
 to_expected () {
 	if [ -z "${is_log}" ]; then
 		base64 ${1} > ${exp}${1}.txt
@@ -132,7 +138,7 @@
 	fi
 
 	#remove base64 troubles #or remove them after diff
-	cd ${e}
+	cd ${e} || exit 0
 	a="$(find . -type f ! -name "*.txt" ! -name "*.log" ! -name "*.c")"
 	if [ -n "${a}" ]; then
 		for var in ${a}; do
diff '--exclude=.git' -ura --new-file ./o-1-5-225/tests/compile onew/tests/compile
--- ./o-1-5-225/tests/compile	2025-04-09 06:38:21.000000000 +0000
+++ onew/tests/compile	2025-04-20 06:18:09.544547215 +0000
@@ -13,8 +13,8 @@
 	LD_LIBRARY_PATH=${LD_LIBRARY_PATH} ${OCOMP} ${file} ${OFLAGS} || exit 1
 done
 
-../otoc/otoc a.out.oc.x && {
-	cc a.out.c -o cc || {
+${launcher} ../otoc/otoc a.out.oc.x && {
+	cc a.out.c -o cc -Wno-int-conversion -Wno-incompatible-pointer-types || { #-Wno are a must at pkgbuild
 		if [ ! -e ../NOOCONVTEST ]; then
 			echo cc test result is wrong
 			exit 1
diff '--exclude=.git' -ura --new-file ./o-1-5-225/tests/inits onew/tests/inits
--- ./o-1-5-225/tests/inits	2025-04-09 06:38:21.000000000 +0000
+++ onew/tests/inits	2025-04-20 06:18:09.764547457 +0000
@@ -1,5 +1,8 @@
 
 if [ "`uname -m`" = "aarch64" ]; then
-	#LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/home/bc/Desktop/libc_i386/usr/lib/i386-linux-gnu now this is at: q (atm is glibc 2.39 at noble), and qq with glibc 2.27 bionic, and qemu or box64
+	# libc6-i386-cross has ld-linux and libc6 for qemu, same for libc6-amd64-cross, before was this:
+	#	LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/home/bc/Desktop/libc_i386/usr/lib/i386-linux-gnu now this is at: q (atm is glibc 2.39 at noble), and qq with glibc 2.27 bionic, and qemu or box64
+	# and there are binutils-i686-linux-gnu binutils-x86-64-linux-gnu gcc-i686-linux-gnu gcc-x86-64-linux-gnu
 	if [ -z "${OCOMP}" ]; then OCOMP="q ../src/o"; fi
+	if [ -z "${launcher}" ]; then launcher=qq; fi
 elif [ -z "${OCOMP}" ]; then OCOMP=../src/o; fi
